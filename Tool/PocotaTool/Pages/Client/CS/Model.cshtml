@page
@using Net.Leksi.Pocota.Client
@using Net.Leksi.Pocota.Tool
@using Net.Leksi.Pocota.Tool.Pages
@using Net.Leksi.Pocota.Tool.Pages.Client.CS
@model ModelModel
@{
}
@Html.Partial("Header", Model)
public class @Model.ClassName@(Model.Inheritances.Count > 0 ? Html.Raw($": {string.Join(", ", Model.Inheritances)}") : string.Empty)
{
@foreach (PropertyModel prop in Model.Properties)
{
    <text>    private const string s_@{}@prop.Name = "@prop.Name";
</text>
}
@foreach (PropertyModel prop in Model.Properties)
{
    <text>    private readonly @nameof(EntityProperty) _@prop.Name@{}EntityProperty = new(typeof(@Model.ClassName), s_@{}@prop.Name);
</text>
}
@foreach (PropertyModel prop in Model.Properties)
{
    <text>    public @Html.Raw(prop.TypeName)@(prop.IsNullable ? "?" : string.Empty) @prop.Name { get; set; }
</text>
}
@foreach (PropertyModel prop in Model.Properties)
{
    <text>    @nameof(EntityProperty) I@{}@Model.ClassName@{}PocotaEntity.@{}@prop.Name => _@prop.Name@{}EntityProperty;
</text>
}
    internal @Model.ClassName@{}(ulong pocotaId): base(pocotaId) { }
}
