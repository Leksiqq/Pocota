<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:Net.Leksi.WpfMarkup;assembly=Net.Leksi.WpfMarkupExtension"
    xmlns:local="clr-namespace:Net.Leksi.Pocota.Client"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Dictionary1.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <local:IsNullConverter x:Key="IsNullConverter"/>
    <l:BoolExpressionConverter x:Key="BoolExpressionConverter"/>
    <Style x:Key="ButtonVisibleIfCanEditStyle" TargetType="ButtonBase">
        <Style.Triggers>
            <l:DataSwitch>
                <l:DataSwitch.Binding>
                    <MultiBinding Converter="{StaticResource BoolExpressionConverter}" ConverterParameter="@0 | @1">
                        <Binding Path="Value" Converter="{StaticResource IsNullConverter}"/>
                        <Binding Path="IsReadonly"/>
                    </MultiBinding>
                </l:DataSwitch.Binding>
                <DataTrigger Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </l:DataSwitch>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonVisibleIfCanEditAndNullableStyle" TargetType="ButtonBase">
        <Style.Triggers>
            <l:DataSwitch>
                <l:DataSwitch.Binding>
                    <MultiBinding Converter="{StaticResource BoolExpressionConverter}" ConverterParameter="@0 | @1 | !@2">
                        <Binding Path="Value" Converter="{StaticResource IsNullConverter}"/>
                        <Binding Path="IsReadonly"/>
                        <Binding Path="IsNullable"/>
                    </MultiBinding>
                </l:DataSwitch.Binding>
                <DataTrigger Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </l:DataSwitch>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonVisibleIfNotReadonly" TargetType="ButtonBase">
        <Style.Triggers>
            <l:DataSwitch Binding="{Binding IsReadonly}">
                <DataTrigger Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </l:DataSwitch>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonVisibleIfNotNull" TargetType="ButtonBase">
        <Style.Triggers>
            <l:DataSwitch Binding="{Binding Value, Converter={StaticResource IsNullConverter}}">
                <DataTrigger Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </l:DataSwitch>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="ListPropertyDataTemplate">
        <DockPanel LastChildFill="True">
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Clear" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="ClearButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfCanEditStyle"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Edit" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="EditButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfNotNull"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Create" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="CreateButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfNotReadonly"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <TextBlock Margin="0, 2">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <l:DataSwitch Binding="{Binding Value, Converter={StaticResource IsNullConverter}}">
                                <DataTrigger Value="True">
                                    <Setter Property="Text" Value="∅"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding Source=IS_NOT_SET, Converter={StaticResource I18nConverter}}"/>
                                </DataTrigger>
                                <DataTrigger Value="False">
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="[..], {0}: {1}">
                                                <Binding Source="COUNT" Converter="{StaticResource I18nConverter}"/>
                                                <Binding Path="Value.Count"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </l:DataSwitch>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="ClassPropertyDataTemplate">
        <DockPanel LastChildFill="True">
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Clear" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="ClearButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfCanEditStyle"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Edit" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="EditButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfNotNull"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Create" Property="{Binding}" Launcher="{
                        Binding
                        RelativeSource={
                            RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType=Window
                            }
                        }"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="CreateButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfNotReadonly"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                <Button.Command>
                    <local:PropertyCommand/>
                </Button.Command>
                <Button.CommandParameter>
                    <local:PropertyCommandArgs Action="Find" Property="{Binding}"/>
                </Button.CommandParameter>
                <Button.Style>
                    <l:StyleCombiner>
                        <StaticResource ResourceKey="FindButtonStyle"/>
                        <StaticResource ResourceKey="ButtonVisibleIfNotReadonly"/>
                    </l:StyleCombiner>
                </Button.Style>
            </Button>
            <TextBlock FontSize="12" FontWeight="Bold">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <l:DataSwitch Binding="{Binding Value, Converter={StaticResource IsNullConverter}}">
                                <DataTrigger Value="True">
                                    <Setter Property="Text" Value="∅"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding Source=IS_NOT_SET, Converter={StaticResource I18nConverter}}"/>
                                </DataTrigger>
                                <DataTrigger Value="False">
                                    <Setter Property="Text" Value="✓"/>
                                    <Setter Property="Foreground" Value="Green"/>
                                    <Setter Property="ToolTip" Value="{Binding Source=IS_SET, Converter={StaticResource I18nConverter}}"/>
                                </DataTrigger>
                            </l:DataSwitch>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="DefaultPropertyDataTemplate" x:Shared="False">
        <DockPanel LastChildFill="True">
            <StackPanel Orientation="Vertical">
                <DockPanel LastChildFill="True">
                    <Button 
                DockPanel.Dock="Right" 
                Margin="0" 
                >
                    <Button.Command>
                        <local:PropertyCommand/>
                    </Button.Command>
                    <Button.CommandParameter>
                        <local:PropertyCommandArgs Action="Clear" Property="{Binding}" Launcher="{
                            Binding
                            RelativeSource={
                                RelativeSource 
                                Mode=FindAncestor, 
                                AncestorType=Window
                                }
                            }"/>
                        </Button.CommandParameter>
                        <Button.Style>
                            <l:StyleCombiner>
                                <StaticResource ResourceKey="ClearButtonStyle"/>
                                <StaticResource ResourceKey="ButtonVisibleIfCanEditStyle"/>
                            </l:StyleCombiner>
                        </Button.Style>
                    </Button>
                    <TextBox 
                        Text="{
                            Binding 
                            Path=Value, 
                            Mode=TwoWay, 
                            UpdateSourceTrigger=PropertyChanged, 
                            Converter={l:ParameterizedResource $converter}
                            }" 
                        IsReadOnly="{Binding IsReadonly}"
                        >
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger 
                                        Binding="{
                                            Binding 
                                            Path=Value, 
                                            Converter={l:ParameterizedResource $converter},
                                            ConverterParameter=InvalidFormat
                                            }"
                                        Value="True"
                                        >
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DockPanel>
                <TextBlock
                    Text="{
                        Binding 
                        Path=Value, 
                        Converter={l:ParameterizedResource $converter},
                        ConverterParameter=RealValue
                        }" 
                    />
            </StackPanel>
        </DockPanel>
    </DataTemplate>
    <local:PropertyTemplateSelector x:Key="PropertyTemplateSelector" x:Shared="False"
        ServiceProviderCatcher="{l:ParameterizedResource $serviceProviderCatcher}"
        DefaultDataTemplateKey="DefaultPropertyDataTemplate"
        ClassDataTemplate="{StaticResource ClassPropertyDataTemplate}"
        ListDataTemplate="{StaticResource ListPropertyDataTemplate}"
        />

    <DataTemplate x:Key="NameTemplate">
        <DockPanel LastChildFill="True">
            <StackPanel Orientation="Vertical"  VerticalAlignment="Top">
                <TextBlock Text="{Binding Name}" TextAlignment="Right" Margin="0,0,10,0" FontWeight="Bold" FontSize="12"/>
            </StackPanel>
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>